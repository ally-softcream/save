/* CSS RESET */
* {
    margin: 0;
    /* 전체 크기 조정 */
    box-sizing: border-box;
}

/* #box1 {
    width: 200px;
    height: 300px;
    background-color: yellowgreen;
    text-align: center;
    /* padding-top을 이용해 글자를 아래로 내리는 방법 */
    /* box-sizing 명령어를 통해 전체 크기 조정하면
    전체 크기가 변하지 않고 패딩값으로 정렬만 된다 */
    /* 단점: 박스의 높이가 변하거나 글줄 갯수가 늘어나면 패딩값을 바꿔야한다. */
    /* padding-top: 35px; */

    /* display: flex;
    justify-content: center;
    align-items: center; 
} */

    /* 글줄이 여러줄이어도 괜찮고 정확히 정중앙에 오게할수잇다 */
    /* 단점: 박스의 높이를 콕 집어 얼마라고 정의x */

    /* #box1 {
        width: 200px;
        /* height: 100px; */
        /* background-color: yellowgreen;
        text-align: center;
        padding: 40px 0;
    } */

    /* line-height를 이용하는 방법 */
    /* 장점: 박스의 높이를 말할 수 있음
    정확히 정중앙에 위치
    박스 높이가 달라져도 쉽게 수정 */
    /* 단점: 한줄밖에 못씀, 두줄이상 쓸 수 없다 */
    
    /* p { */
        /* line-height: 0.5em; em: 글자 수 대비 몇px라는 뜻 */
    /* } */

    #box1 {
        /* width: 200px;
        height: 300px;
        background-color: yellowgreen;
        text-align: center;
        line-height: 300px; */
        width: 200px;
        height: 100px;
        background-color: yellowgreen;
        position: relative;
        /* text-align: center;
        vertical-align: middle; */
    }

    #box1 span {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%); /* 위치 중앙정렬 */
    }

    /* .small {
        font-size: 0.5em;
        vertical-align: -20px; 음수도 된다!
    } */
    /* .big {
        font-size: 2em;
        vertical-align: -30px;
    } */

    /* 두줄 이상 글도 쓰고 싶고 */
    /* 박스의 높이도 특정하고 싶고 */
    /* 정확히 정중앙에도 놓고 싶을 때 쓰는 방법 */

    #box3 {
        width: 600px;
        height: 400px;
        background-color: yellowgreen;
        margin-left: 100px;
        margin-top: 50px;
        position: relative;
    }

    #box2 {
        width: 300px;
        /* height: 200px; */
        background-color: #06c;

        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
    }

    /* position 설명
    static < 기본
    relative < 상대적으로.. 본거지(???) 기준
    absolute < 기준이 되는 위치가 따로 없고 본인임 .. 공중에 떠있는 느낌
    쓸 때 조심할 것은 . . 공중에 뜨기 때문에 위치에 뭐가 없고 사라진다
    이동할 때 기준이 원래 있던 곳 기준이 아니라 공간의 최끝단이 기준이 되므로 주의
    (부모 오브젝트도 무시한다)
    하지만 부모 오브젝트에게 포지션 static을 제외한 포지션이 있다면
    부모 오브젝트를 기준으로 움직이게 된다
    정확히는 가장 가까운 조상 중에 static이 아닌 조상의 안쪽을 기준으로 감
    fixed < 스크롤이 돌아도 안 따라가고 고정됨 
    무조건 화면 기준으로 고정됨
    */