.container {
    width: 416px;
    margin: 80px auto;
}

.section {
    margin: 15px 0;
}

.header {
    /* flex 컨테이너 만들기 */
    display: flex;
    /* 제일 첫번째 요소와 끝요소를 양 끝에 붙이고, 여백을 균일하게 나눔 */
    justify-content: space-between;
    /* 수직 정렬 */
    align-items: center;
}

.header-heading {
    margin: 0;
    font-size: 40px;
    font-weight: 800;
}

/* a 태그의 클래스 */
.cancel {
    background-color: #edf1f7;
    border-radius: 50%;
    padding: 18px;
    /* 중앙 정렬 */
    display: flex;
    justify-content: center;
    align-items: center;
}

.cancel:hover {
    background-color: #cdd4df;
}

/* 8의 배수로 사이즈를 지정하면 대충 보기 좋게 나온다 */
.section-heading {
    font-weight: 500;
    font-size: 24px;
    /* 위아래만 마진 주고, 양옆은 없애기 */
    margin: 24px 0;
}

.mbti-options {
    display: flex;
    /* 한줄 띄우기 */
    margin: 16px 0;
    /* 요소 사이 띄우기 */
    gap: 16px;
}

.mbti-option {
    border: 2px solid #e7ebf2;
    border-radius: 16px;
    padding: 14px 40px;
    color: #8892a6;
    /* 남는 영역 없이 여백 다 채우기 */
    flex-grow: 1;
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 32px;
}

.mbti-option:hover {
    background-color: #f4f7fb;
    cursor: pointer;
}

/* mbti-option과 selected가 둘다 있어야 적용되는 css */
.mbti-option.selected {
    background-color: #464e5e;
    border: 2px solid #464e5e;
    /* color: aliceblue; */
}
/* selected일 때 span 태그의 css */

/* mbti 알파벳 */
/* 본래 span은 인라인 요소라 width 지정이 안 되지만, 
flex item으로 사용되는 것이라서 지정이 가능 */
/* 이렇게 세부적으로 쓰는 것이 좋다. 코드 찾기도 쉽고 세부적인 지정도 되니까 */
.mbti-option.selected > .mbti-char {
    color: #fff;
}

.mbti-char {
    /* 사이즈를 고정시켜 둬야 화면이 줄든 늘든 일정하게 잡힌다 */
    width: 20px;
    color: #464e5e;
    font-size: 40px;
    text-align: center;
}

.random {
    background-color: #f4f7fb;
    border-radius: 8px;
    margin-left: 8px;
    /* 기본적으로 들어가는 보더(테두리선) 없애기 */
    border: none;
    padding: 8px;
}
.random:hover {
    background-color: #edf0f5;
    cursor: pointer;
}

.color-input {
    color: #8892a6;
    font-size: 24px;
    width: 100%;
    border: 2px solid #e7ebfe;
    border-radius: 16px;
    padding: 26px;
}

.color-input:hover {
    background-color: #f4f7fb;
}

/* 창에 마우스 포인터가 위치했을 때 */
.color-input:focus {
    border: 2px solid #464e5e;
    /* x축 블러 y축 색상(r, g, b, 투명도) */
    /* inset: inner shadow 주는 명령어 */
    box-shadow: inset 0px 4px 8px rgba(0, 0, 0, 0.15);
}

.color-input-chip {
    width: 40px;
    height: 40px;
    border-radius: 8px;
    /* position을 absolute로 지정하면 문서의 일반적인 흐름에서 벗어나게 된다 */
    position: absolute;
    /* top: 21px; */
    top: 25%;
    /* 부모 요소의 오른쪽 맨 끝에서부터 이동한다 */
    right: 5.5%;
    /* right: 26px; */
}

.color-input-container {
    /* position을 relative로 지정하면 일반적인 문서 흐름대로, 원래 위치에 들어가게 된다 */
    position: relative;
}

.submit {
    width: 100%;
    background-color: #464e5e;
    border: none;
    border-radius: 16px;
    color: #fff;
    font-size: 24px;
    font-weight: 700;
    /* 폰트랑 보더 사이의 여백 */
    padding: 22px;
    cursor: pointer;
}